@model PaginatedList<WebApplicationNW.Models.Employee>

@{
    ViewData["Title"] = "Employees";
}

<h1>Employees</h1>

<p>
    <a asp-action="Create" class="btn btn-warning">Create New</a>
</p>

<form class="" asp-controller="Employees" asp-action="Index">

    <div class="container text-center row g-3 justify-content-center">

        <div class="col-auto">
            <select class="form-select" aria-label="Default select example" name="nameColum" value="@ViewData["NameColum"]">
                <option selected>Filter</option>
                <option value="LastName">LastName</option>
                <option value="FirstName">FirstName</option>
                <option value="Title">Title</option>
                <option value="TitleOfCourtesy">TitleOfCourtesy</option>
                <option value="BirthDate">BirthDate</option>
                <option value="HireDate">HireDate</option>
                <option value="Address">Address</option>
                <option value="City">City</option>
                <option value="Region">Region</option>
                <option value="PostalCode">PostalCode</option>
                <option value="Country">Country</option>
                <option value="HomePhone">HomePhone</option>
            </select>
        </div>
        <div class="col-auto">
            <div>
                <input type="text" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" />
            </div>
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-outline-primary" />
        </div>

    </div>

</form>
<br />
<table class="table table-bordered table-sm">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroLastName"]">
                    @Html.DisplayNameFor(model => Model[0].LastName)
                </a>    
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroFirstName"]">
                    @Html.DisplayNameFor(model => Model[0].FirstName)
                </a>
        
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].TitleOfCourtesy)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].HireDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].City)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].Region)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => Model[0].HomePhone)
            </th>
 
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TitleOfCourtesy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HireDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Region)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HomePhone)
            </td>

            <td>
                <div class="btn-group">
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.EmployeeId">Edit</a> 
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.EmployeeId">Details</a> 
                        <a class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@item.EmployeeId">Delete</a>
                </div>

            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-nameColum="@ViewData["NameColum"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-nameColum="@ViewData["NameColum"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
