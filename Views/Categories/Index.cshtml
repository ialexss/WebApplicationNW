@model PaginatedList<WebApplicationNW.Models.Category>

@{
    ViewData["Title"] = "Categories";
}

<h1>Categories</h1>

<p>
    <a asp-action="Create" class="btn btn-warning">Create New</a>
</p>
<p>
    <a class="btn btn-dark btn-sm" asp-action="MostrarPDFenPagina"> GET PDF</a>
</p>

<form class="" asp-controller="Categories" asp-action="Index">

    <div class="container text-center row g-3 justify-content-center">

        <div class="col-auto">
            <select class="form-select" aria-label="Default select example" name="nameColum" value="@ViewData["NameColum"]">
                <option selected>Filter</option>
                <option value="CategoryName">CategoryName</option>
                <option value="Description">Description</option>
            </select>
        </div>
        <div class="col-auto">
            <div>
                <input type="text" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" />
            </div>
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-outline-primary" />
        </div>

    </div>

</form>
<br />
<table class="table table-bordered table-sm">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroCategoryName"]">
                    @Html.DisplayNameFor(model => Model[0].CategoryName)
                </a>
                
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroDescription"]">
                    @Html.DisplayNameFor(model => Model[0].Description)
                </a>
                
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>

            <td>
                <div class="btn-group">
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.CategoryId">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.CategoryId">Details</a>
                        <a class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@item.CategoryId">Delete</a>
                </div>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-nameColum="@ViewData["NameColum"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-nameColum="@ViewData["NameColum"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
