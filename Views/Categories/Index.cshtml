@using System.Drawing
@model PaginatedList<WebApplicationNW.Models.Category>

@{
    ViewData["Title"] = "Categories";
}

<h1>Categories</h1>

<p>
    <a asp-action="Create" class="btn btn-warning">Create New</a>
</p>
<p>
    <a class="btn btn-dark btn-sm" asp-action="MostrarPDFenPagina"> GET PDF</a>
</p>

<form class="" asp-controller="Categories" asp-action="Index">

    <div class="container text-center row g-3 justify-content-center">

        <div class="col-auto">
            <select class="form-select" aria-label="Default select example" name="nameColumn">
                <option selected>Filter</option>
                @foreach (var column in Category.Columns)
                {
                    if (column.PropertyType.Name != "Byte[]")
                    {
                        <option selected="@(ViewData["NameColumn"]+""==@column.Name)" value="@column.Name">@column.Name</option>
                    }
                }
            </select>
        </div>
        <div class="col-auto">
            <div>
                <input type="text" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" />
            </div>
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-outline-primary" />
        </div>

    </div>

</form>
<br />
<table class="table table-bordered table-sm">
    <thead>
        <tr>
            @foreach (var column in Category.Columns)
            {
                <th>
                    <a asp-action="Index" asp-route-order="@ViewData["Order"+column.Name]">
                        @column.Name
                    </a>
                </th>
            }

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var fila in Model) {
            <tr>
                @foreach (var column in Category.Columns) {
                    <td>
                        @if (column.PropertyType.Name == "Byte[]")
                        {
                            if (column.GetValue(fila) != null)
                            {
                                Byte[] byteBLOBData = (Byte[])(column.GetValue(fila)!);
                                @*MemoryStream stmBLOBData = new MemoryStream(byteBLOBData);*@
                                @*Image image1 = Image.FromStream(stmBLOBData);*@
                                Image image1 = (Bitmap)((new ImageConverter()).ConvertFrom(byteBLOBData)!); ;

                                MemoryStream ms = new MemoryStream();
                                image1.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                Byte[] byte1=ms.ToArray();
                                
                                <img width="100" height="100" src="@("data:image;base64," + Convert.ToBase64String(byte1))"/>
                            }
                        }
                        else
                        {
                            @column.GetValue(fila)
                        }
                    </td>
                }
                <td>
                    <div class="btn-group">
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@fila.CategoryId">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@fila.CategoryId">Details</a>
                        <a class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@fila.CategoryId">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-NameColumn="@ViewData["NameColumn"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-NameColumn="@ViewData["NameColumn"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
