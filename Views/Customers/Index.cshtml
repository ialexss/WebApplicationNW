@using Microsoft.AspNetCore.Components
@model PaginatedList<WebApplicationNW.Models.Customer>
@*@model IEnumerable<WebApplicationNW.Models.Customer>*@

@{
    ViewData["Title"] = "Customers";
}


<div class="container">

    <h1>Customers</h1>

    <p>
        <a class="btn btn-warning" asp-action="Create">Create New</a>
    </p>
    <p>
        <a class="btn btn-dark btn-sm" asp-action="MostrarPDFenPagina"> GET PDF</a>
    </p>

</div>


<form class="" asp-controller="Customers" asp-action="Index">

    <div class="container text-center row g-3 justify-content-center">

            <div class="col-auto">
            <select class="form-select" aria-label="Default select example" name="nameColumn">
                <option selected>Filter</option>
                @foreach (var column in Customer.Columns)
                {
                    <option selected="@(ViewData["NameColumn"]+""==@column.Name)" value="@column.Name">@column.Name</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <div>
                <input type="text" name="searchString" class="form-control" value="@ViewData["CurrentFilter"]" />
            </div>
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-outline-primary" />
        </div>

    </div>

</form>
<br />
<table class="table table-bordered table-sm">
    <thead>
        <tr>
            @foreach (var column in Customer.Columns)
            {
                <th>
                    <a asp-action="Index" asp-route-order="@ViewData["Order"+column.Name]">
                        @column.Name
                    </a>
                </th>
            }

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var fila in Model)
        {
            <tr>
                @foreach (var column in Customer.Columns)
                {
                    <td>
                        @column.GetValue(fila)
                    </td>
                }
                <td>
                    <div class="btn-group">
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@fila.CustomerId">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@fila.CustomerId">Details</a>
                        <a class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@fila.CustomerId">Delete</a>
                    </div>
                </td>
            </tr>
}
    </tbody>

</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-nameColumn="@ViewData["NameColumn"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-nameColumn="@ViewData["NameColumn"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-order="@ViewData["CurrentOrder"]"
   class="btn btn-default @nextDisabled">
    Next
</a>