@model PaginatedList<WebApplicationNW.Models.Customer>
@*@model IEnumerable<WebApplicationNW.Models.Customer>*@

@{
    ViewData["Title"] = "Customers";
}

<div class="container">

    <h1>Customers</h1>

    <p>
        <a class="btn btn-primary" asp-action="Create">Create New</a>
    </p>

</div>


<form class="" asp-controller="Customers" asp-action="Index">

    <div class="container text-center row g-3 justify-content-center">

            <div class="col-auto">
                <select class="form-select" aria-label="Default select example" name="nameColum" >
                    <option selected>Select</option>
                    <option value="City">City</option>
                    <option value="CompanyName">Company Name</option>
                    <option value="ContactName">Contact Name</option>
                    <option value="ContactTitle">Contact Title</option>
                    <option value="Address">Address</option>
                    <option value="PostalCode">Postal Code</option>
                    <option value="Country">Country</option>
                    <option value="Phone">Phone</option>
                    <option value="Fax">Fax</option>
                </select>
            </div>
            <div class="col-auto">
                <div >
                    <input type="text" name="SearchString" class="form-control" />
                </div>
            </div>
            <div class="col-auto">
                    <input type="submit" value="Search" class="btn btn-outline-primary" />
            </div>

    </div>

</form>
<br />
<table class="table table-bordered table-sm">
    <thead class="" >
        <tr>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroCompany"]">
                    @Html.DisplayNameFor(model => Model[0].CompanyName)
                </a>
                
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroName"]">
                   @Html.DisplayNameFor(model => Model[0].ContactName)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroContactTitle"]">
                    @Html.DisplayNameFor(model => Model[0].ContactTitle)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroAddress"]">
                    @Html.DisplayNameFor(model => Model[0].Address)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroCity"]">
                    @Html.DisplayNameFor(model => Model[0].City)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroPostalCode"]">
                    @Html.DisplayNameFor(model => Model[0].PostalCode)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroCountry"]">
                    @Html.DisplayNameFor(model => Model[0].Country)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroPhone"]">
                    @Html.DisplayNameFor(model => Model[0].Phone)
                </a>
            </th>

            <th>
                <a asp-action="Index" asp-route-order="@ViewData["FiltroFax"]">
                   @* @Html.DisplayNameFor(model => model.Fax)*@
                   
                    @Html.DisplayNameFor(model => Model[0].Fax)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ContactTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fax)
            </td>
            <td>
                    <div class="btn-group">
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.CustomerId">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Details" asp-route-id="@item.CustomerId">Details</a>
                        <a class="btn btn-outline-primary" asp-action="Delete" asp-route-id="@item.CustomerId">Delete</a>
                    </div>
            </td>
        </tr>
}
    </tbody>

</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
@*   asp-route-sortOrder="@ViewData["CurrentSort"]"*@
@*   asp-route-currentFilter="@ViewData["CurrentFilter"]"*@
<a asp-action="Index"

   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@("Prueba")"
   asp-route-nameColumn="@("namecolum")"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-searchString="@("Prueba")"
   asp-route-nameColum="@("namecolum")"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>